<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lazinesssheep.travel.dao.GoodOrderDao">

    <resultMap id="goodOrderResultMap" type="com.lazinesssheep.travel.entity.dto.GoodOrder">
        <id column="id" property="id"/> 
        <result column="goodId" property="goodId"/> 
        <result column="startingTime" property="startingTime"/> 
        <result column="startingWeek" property="startingWeek"/> 
        <result column="endingTime" property="endingTime"/> 
        <result column="endingWeek" property="endingWeek"/> 
        <result column="total" property="total"/> 
        <result column="residue" property="residue"/> 
        <result column="price" property="price"/> 
        <result column="status" property="status"/> 
        <result column="createTime" property="createTime"/> 
        <result column="createUserid" property="createUserid"/> 
        <result column="updateTime" property="updateTime"/> 
        <result column="updateUserid" property="updateUserid"/> 

        
        
    </resultMap>

    <sql id="goodOrderColumns">
        t_good_order.id AS "id",
        t_good_order.good_id AS "goodId",
        t_good_order.starting_time AS "startingTime",
        t_good_order.starting_week AS "startingWeek",
        t_good_order.ending_time AS "endingTime",
        t_good_order.ending_week AS "endingWeek",
        t_good_order.total AS "total",
        t_good_order.residue AS "residue",
        t_good_order.price AS "price",
        t_good_order.status AS "status",
        t_good_order.create_time AS "createTime",
        t_good_order.create_userid AS "createUserid",
        t_good_order.update_time AS "updateTime",
        t_good_order.update_userid AS "updateUserid"
    </sql>

    <sql id="goodOrderJoins">
        
    </sql>

    <select id="get" resultMap="goodOrderResultMap">
        SELECT
        <include refid="goodOrderColumns" />
        FROM t_good_order <include refid="goodOrderJoins" />
        <where>
        t_good_order.id = #{id}
        </where>
    </select>

    <select id="findList" resultMap="goodOrderResultMap">
        SELECT
        <include refid="goodOrderColumns" />
        FROM t_good_order <include refid="goodOrderJoins" />
        <where>
        </where>
    </select>

    <select id="findAllList" resultMap="goodOrderResultMap">
        SELECT
        <include refid="goodOrderColumns" />
        FROM t_good_order <include refid="goodOrderJoins" />
        <where>
        </where>
    </select>

    <insert id="insert">
        INSERT INTO t_good_order(
            id,
            good_id,
            starting_time,
            starting_week,
            ending_time,
            ending_week,
            total,
            residue,
            price,
            status,
            create_time,
            create_userid,
            update_time,
            update_userid
        )
        VALUES (
            #{id},
            #{goodId},
            #{startingTime},
            #{startingWeek},
            #{endingTime},
            #{endingWeek},
            #{total},
            #{residue},
            #{price},
            #{status},
            #{createTime},
            #{createUserid},
            #{updateTime},
            #{updateUserid}
        )
    </insert>

    <insert id="insertBatch">
        INSERT INTO t_good_order(
            id,
            good_id,
            starting_time,
            starting_week,
            ending_time,
            ending_week,
            total,
            residue,
            price,
            status,
            create_time,
            create_userid,
            update_time,
            update_userid
        )
        VALUES
        <foreach collection ="list" item="goodOrder" separator =",">
        (
            #{goodOrder.id},
            #{goodOrder.goodId},
            #{goodOrder.startingTime},
            #{goodOrder.startingWeek},
            #{goodOrder.endingTime},
            #{goodOrder.endingWeek},
            #{goodOrder.total},
            #{goodOrder.residue},
            #{goodOrder.price},
            #{goodOrder.status},
            #{goodOrder.createTime},
            #{goodOrder.createUserid},
            #{goodOrder.updateTime},
            #{goodOrder.updateUserid}
        )
        </foreach>
    </insert>

    <update id="update">
        UPDATE t_good_order SET
        id = #{id},
        good_id = #{goodId},
        starting_time = #{startingTime},
        starting_week = #{startingWeek},
        ending_time = #{endingTime},
        ending_week = #{endingWeek},
        total = #{total},
        residue = #{residue},
        price = #{price},
        status = #{status},
        create_time = #{createTime},
        create_userid = #{createUserid},
        update_time = #{updateTime},
        update_userid = #{updateUserid}
        WHERE id = #{id}
    </update>

    <update id="delete">
        DELETE FROM t_good_order
        WHERE id = #{id}
    </update>

</mapper>